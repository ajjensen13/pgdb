{{- if .Values.pgadmin.create }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgadmin-sts
  labels:
    helm.sh/chart: "{{ printf "%s-%s" .Chart.Name .Chart.Version }}"
    app.kubernetes.io/name: pgadmin-sts
    app.kubernetes.io/instance: {{ .Chart.AppVersion }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pgadmin
      app.kubernetes.io/instance: {{ .Chart.AppVersion }}
  serviceName: pgadmin
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgadmin
        app.kubernetes.io/instance: {{ .Chart.AppVersion }}
    spec:
      initContainers:
      - name: pgadmin-volume-mount-hack
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 5050:5050 /var/lib/pgadmin"]
        volumeMounts:
        - name: pgadmin-working-volume
          mountPath: /var/lib/pgadmin
      containers:
      - name: pgadmin
        image: "{{ .Values.pgadmin.image.repository }}{{ with .Values.pgadmin.image.tag }}:{{ . }}{{ end }}{{ with .Values.pgadmin.image.digest }}@{{ . }}{{ end }}"
        imagePullPolicy: {{ .Values.pgadmin.image.pullPolicy }}
        ports:
        - containerPort: 80
          name: http
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: {{ .Values.pgadmin.default_email }}
        - name: PGADMIN_DEFAULT_PASSWORD
          value: {{ .Values.pgadmin.default_password }}
        volumeMounts:
        - name: pgadmin-working-volume
          mountPath: /var/lib/pgadmin
  volumeClaimTemplates:
  - metadata:
      name: pgadmin-working-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 4Gi
{{- end }}