{{- if .Values.local.create }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgdb-sts
  labels:
    helm.sh/chart: "{{ printf "%s-%s" .Chart.Name .Chart.Version }}"
    app.kubernetes.io/name: pgdb-sts
    app.kubernetes.io/instance: {{ .Chart.AppVersion }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pgdb
      app.kubernetes.io/instance: {{ .Chart.AppVersion }}
  serviceName: 'pgdb'
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgdb
        app.kubernetes.io/instance: {{ .Chart.AppVersion }}
    spec:
      priorityClassName: required-preempting-pc
      containers:
      - name: pgdb
        image: "{{ .Values.local.image.repository }}{{ with .Values.local.image.tag }}:{{ . }}{{ end }}{{ with .Values.local.image.digest }}@{{ . }}{{ end }}"
        imagePullPolicy: {{ .Values.local.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.local.port }}
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        {{- with .Values.local.host_auth_method }}
        - name: POSTGRES_HOST_AUTH_METHOD
          value: {{ . }}
        {{- end }}
        volumeMounts:
        - name: pgdbdata-volume
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
  volumeClaimTemplates:
  - metadata:
      name: pgdbdata-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 32Gi
{{- end }}